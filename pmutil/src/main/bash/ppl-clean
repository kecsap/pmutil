#!/bin/bash
# Calibration pipeline
# Usage:
# 	ppl-clean [options]
# Options:
#

usage() {
	echo "Usage: ppl-clean [OPTIONS]... [BASE_FOLDER]"
	echo "Clean generated calibration images."
	echo
	echo "Mandatory arguments to long options are mandatory for short options too."
	echo "  -l,  --lights           remove FITS files in Light folder too"		
	echo "  -h,  --help             print this page"
	echo
}

Color_Off='\033[0m'       # Text Reset
BRed="\e[1;31m"           # Red
BGreen='\033[1;32m'       # Green
Blue='\033[0;34m'         # Blue
BCyan='\e[1;36m'	  # Cyan

print_error() {
	echo -e "${BRed}Error: $1 ${Color_Off}"
}

print_warning() {
	echo -e "${BGreen}Warning: $1 ${Color_Off}"
}

print_info() {
	echo -e "${BCyan}$1 ${Color_Off}"
}

exit_on_error() {
	print_warning "Processing stop on error."
}

echo
echo -e "${BGreen}ppl-clean, version 0.1.0${Color_Off}"
echo -e "${Blue}Clean all generated FITS and other files.${Color_Off}"
echo

####################### command line options

SHOW_HELP=0
LIGHTS_ALSO=0
BASE_FOLDER=""

# process command line parameters
while [[ $# -gt 0 ]]; do
	case "$1" in
		-h|--help)
			SHOW_HELP=1
			shift
			;;
		-l|--lights)
			LIGHTS_ALSO=1
			shift
			;;
		*)
			#print_error "bad command line option: $1"
			BASE_FOLDER=`echo "$1" | sed 's/\/$//'`
			shift
			;;
	esac
done

if [ $SHOW_HELP -eq 1 ]; then
	usage
	exit 0
fi

if [ ! "$BASE_FOLDER" == "" ] ; then
  if [ ! -d $BASE_FOLDER ] ; then
    print_error "Base folder $BASE_FOLDER not exists or not a directory."
    exit 1
  else
    echo "base folder: $BASE_FOLDER"
  fi
fi


######################### discover pipeline elements

# default setup
. "ppl-setup"

TEMPDIR="temp"

. "ppl-disco" 0 0 $BASE_FOLDER

if [ "$BASE_FOLDER" == "" ]; then
	BASE_FOLDER="."
fi

######################### cleaning functions

clean_folder() {
	local fs=($BASE_FOLDER/$1/*$2)
	if [ ${#fs[*]} -gt 0 ] && [ "${fs[0]}" != "$BASE_FOLDER/$1/*$2" ]; then
		print_info "cleaning folder: $BASE_FOLDER/$1"
		echo "files: ${fs[*]}"
		rm -f $BASE_FOLDER/$1/*$2
	else
		echo "no $2 files in folder: $BASE_FOLDER/$1"
	fi
}

######################### clean generated file on folders

# clean Temp folder

clean_folder "$TEMPDIR"

# clean Sequence folder

clean_folder $SEQ_FOLDER_NAME

# clean Calibrated folder

clean_folder $CALIB_FOLDER_NAME

# clean light FITS images

if [ $LIGHTS_ALSO == 1 ]; then
	clean_folder $LIGHT_FOLDER_NAME ".fits"
fi
